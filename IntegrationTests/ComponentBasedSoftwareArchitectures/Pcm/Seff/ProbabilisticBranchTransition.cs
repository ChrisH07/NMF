//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMFExamples.Identifier;
using NMFExamples.Pcm.Core;
using NMFExamples.Pcm.Core.Entity;
using NMFExamples.Pcm.Parameter;
using NMFExamples.Pcm.Reliability;
using NMFExamples.Pcm.Repository;
using NMFExamples.Pcm.Seff.Seff_performance;
using NMFExamples.Pcm.Seff.Seff_reliability;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using global::System.Collections;
using global::System.Collections.Generic;
using global::System.Collections.ObjectModel;
using global::System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMFExamples.Pcm.Seff
{
    
    
    /// <summary>
    /// The default implementation of the ProbabilisticBranchTransition class
    /// </summary>
    [XmlNamespaceAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/SEFF/5.0")]
    [XmlNamespacePrefixAttribute("seff")]
    [ModelRepresentationClassAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//seff/ProbabilisticBranchTransi" +
        "tion")]
    [DebuggerDisplayAttribute("ProbabilisticBranchTransition {Id}")]
    public partial class ProbabilisticBranchTransition : AbstractBranchTransition, IProbabilisticBranchTransition, IModelElement
    {
        
        /// <summary>
        /// The backing field for the BranchProbability property
        /// </summary>
        private double _branchProbability;
        
        private static Lazy<ITypedElement> _branchProbabilityAttribute = new Lazy<ITypedElement>(RetrieveBranchProbabilityAttribute);
        
        private static IClass _classInstance;
        
        /// <summary>
        /// The branchProbability property
        /// </summary>
        [XmlElementNameAttribute("branchProbability")]
        [XmlAttributeAttribute(true)]
        public double BranchProbability
        {
            get
            {
                return this._branchProbability;
            }
            set
            {
                if ((this._branchProbability != value))
                {
                    double old = this._branchProbability;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnBranchProbabilityChanging(e);
                    this.OnPropertyChanging("BranchProbability", e, _branchProbabilityAttribute);
                    this._branchProbability = value;
                    this.OnBranchProbabilityChanged(e);
                    this.OnPropertyChanged("BranchProbability", e, _branchProbabilityAttribute);
                }
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//seff/ProbabilisticBranchTransi" +
                            "tion")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Gets fired before the BranchProbability property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> BranchProbabilityChanging;
        
        /// <summary>
        /// Gets fired when the BranchProbability property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> BranchProbabilityChanged;
        
        private static ITypedElement RetrieveBranchProbabilityAttribute()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Seff.ProbabilisticBranchTransition.ClassInstance)).Resolve("branchProbability")));
        }
        
        /// <summary>
        /// Raises the BranchProbabilityChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnBranchProbabilityChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.BranchProbabilityChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the BranchProbabilityChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnBranchProbabilityChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.BranchProbabilityChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Resolves the given attribute name
        /// </summary>
        /// <returns>The attribute value or null if it could not be found</returns>
        /// <param name="attribute">The requested attribute name</param>
        /// <param name="index">The index of this attribute</param>
        protected override object GetAttributeValue(string attribute, int index)
        {
            if ((attribute == "BRANCHPROBABILITY"))
            {
                return this.BranchProbability;
            }
            return base.GetAttributeValue(attribute, index);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "BRANCHPROBABILITY"))
            {
                this.BranchProbability = ((double)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//seff/ProbabilisticBranchTransi" +
                        "tion")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the branchProbability property
        /// </summary>
        private sealed class BranchProbabilityProxy : ModelPropertyChange<IProbabilisticBranchTransition, double>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public BranchProbabilityProxy(IProbabilisticBranchTransition modelElement) : 
                    base(modelElement, "branchProbability")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override double Value
            {
                get
                {
                    return this.ModelElement.BranchProbability;
                }
                set
                {
                    this.ModelElement.BranchProbability = value;
                }
            }
        }
    }
}

