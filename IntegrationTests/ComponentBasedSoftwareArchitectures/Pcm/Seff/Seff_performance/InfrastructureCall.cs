//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMFExamples.Pcm.Core;
using NMFExamples.Pcm.Core.Entity;
using NMFExamples.Pcm.Repository;
using NMFExamples.Pcm.Resourcetype;
using NMFExamples.Pcm.Seff;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using global::System.Collections;
using global::System.Collections.Generic;
using global::System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMFExamples.Pcm.Seff.Seff_performance
{
    
    
    /// <summary>
    /// The default implementation of the InfrastructureCall class
    /// </summary>
    [XmlNamespaceAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/SEFF/SEFF_Performance/5.0")]
    [XmlNamespacePrefixAttribute("seff_performance")]
    [ModelRepresentationClassAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//seff/seff_performance/Infrastr" +
        "uctureCall")]
    public partial class InfrastructureCall : CallAction, IInfrastructureCall, IModelElement
    {
        
        private static Lazy<ITypedElement> _signature__InfrastructureCallReference = new Lazy<ITypedElement>(RetrieveSignature__InfrastructureCallReference);
        
        /// <summary>
        /// The backing field for the Signature__InfrastructureCall property
        /// </summary>
        private IInfrastructureSignature _signature__InfrastructureCall;
        
        private static Lazy<ITypedElement> _numberOfCalls__InfrastructureCallReference = new Lazy<ITypedElement>(RetrieveNumberOfCalls__InfrastructureCallReference);
        
        /// <summary>
        /// The backing field for the NumberOfCalls__InfrastructureCall property
        /// </summary>
        private IPCMRandomVariable _numberOfCalls__InfrastructureCall;
        
        private static Lazy<ITypedElement> _action__InfrastructureCallReference = new Lazy<ITypedElement>(RetrieveAction__InfrastructureCallReference);
        
        private static Lazy<ITypedElement> _requiredRole__InfrastructureCallReference = new Lazy<ITypedElement>(RetrieveRequiredRole__InfrastructureCallReference);
        
        /// <summary>
        /// The backing field for the RequiredRole__InfrastructureCall property
        /// </summary>
        private IInfrastructureRequiredRole _requiredRole__InfrastructureCall;
        
        private static IClass _classInstance;
        
        /// <summary>
        /// The signature__InfrastructureCall property
        /// </summary>
        [XmlElementNameAttribute("signature__InfrastructureCall")]
        [XmlAttributeAttribute(true)]
        public IInfrastructureSignature Signature__InfrastructureCall
        {
            get
            {
                return this._signature__InfrastructureCall;
            }
            set
            {
                if ((this._signature__InfrastructureCall != value))
                {
                    IInfrastructureSignature old = this._signature__InfrastructureCall;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnSignature__InfrastructureCallChanging(e);
                    this.OnPropertyChanging("Signature__InfrastructureCall", e, _signature__InfrastructureCallReference);
                    this._signature__InfrastructureCall = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetSignature__InfrastructureCall;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetSignature__InfrastructureCall;
                    }
                    this.OnSignature__InfrastructureCallChanged(e);
                    this.OnPropertyChanged("Signature__InfrastructureCall", e, _signature__InfrastructureCallReference);
                }
            }
        }
        
        /// <summary>
        /// The numberOfCalls__InfrastructureCall property
        /// </summary>
        [XmlElementNameAttribute("numberOfCalls__InfrastructureCall")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("infrastructureCall__PCMRandomVariable")]
        public IPCMRandomVariable NumberOfCalls__InfrastructureCall
        {
            get
            {
                return this._numberOfCalls__InfrastructureCall;
            }
            set
            {
                if ((this._numberOfCalls__InfrastructureCall != value))
                {
                    IPCMRandomVariable old = this._numberOfCalls__InfrastructureCall;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnNumberOfCalls__InfrastructureCallChanging(e);
                    this.OnPropertyChanging("NumberOfCalls__InfrastructureCall", e, _numberOfCalls__InfrastructureCallReference);
                    this._numberOfCalls__InfrastructureCall = value;
                    if ((old != null))
                    {
                        old.InfrastructureCall__PCMRandomVariable = null;
                        old.Parent = null;
                        old.Deleted -= this.OnResetNumberOfCalls__InfrastructureCall;
                    }
                    if ((value != null))
                    {
                        value.InfrastructureCall__PCMRandomVariable = this;
                        value.Parent = this;
                        value.Deleted += this.OnResetNumberOfCalls__InfrastructureCall;
                    }
                    this.OnNumberOfCalls__InfrastructureCallChanged(e);
                    this.OnPropertyChanged("NumberOfCalls__InfrastructureCall", e, _numberOfCalls__InfrastructureCallReference);
                }
            }
        }
        
        /// <summary>
        /// The action__InfrastructureCall property
        /// </summary>
        [XmlElementNameAttribute("action__InfrastructureCall")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("infrastructureCall__Action")]
        public IAbstractInternalControlFlowAction Action__InfrastructureCall
        {
            get
            {
                return ModelHelper.CastAs<IAbstractInternalControlFlowAction>(this.Parent);
            }
            set
            {
                this.Parent = value;
            }
        }
        
        /// <summary>
        /// The requiredRole__InfrastructureCall property
        /// </summary>
        [XmlElementNameAttribute("requiredRole__InfrastructureCall")]
        [XmlAttributeAttribute(true)]
        public IInfrastructureRequiredRole RequiredRole__InfrastructureCall
        {
            get
            {
                return this._requiredRole__InfrastructureCall;
            }
            set
            {
                if ((this._requiredRole__InfrastructureCall != value))
                {
                    IInfrastructureRequiredRole old = this._requiredRole__InfrastructureCall;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnRequiredRole__InfrastructureCallChanging(e);
                    this.OnPropertyChanging("RequiredRole__InfrastructureCall", e, _requiredRole__InfrastructureCallReference);
                    this._requiredRole__InfrastructureCall = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetRequiredRole__InfrastructureCall;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetRequiredRole__InfrastructureCall;
                    }
                    this.OnRequiredRole__InfrastructureCallChanged(e);
                    this.OnPropertyChanged("RequiredRole__InfrastructureCall", e, _requiredRole__InfrastructureCallReference);
                }
            }
        }
        
        /// <summary>
        /// Gets the child model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> Children
        {
            get
            {
                return base.Children.Concat(new InfrastructureCallChildrenCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new InfrastructureCallReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//seff/seff_performance/Infrastr" +
                            "uctureCall")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Gets fired before the Signature__InfrastructureCall property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Signature__InfrastructureCallChanging;
        
        /// <summary>
        /// Gets fired when the Signature__InfrastructureCall property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Signature__InfrastructureCallChanged;
        
        /// <summary>
        /// Gets fired before the NumberOfCalls__InfrastructureCall property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> NumberOfCalls__InfrastructureCallChanging;
        
        /// <summary>
        /// Gets fired when the NumberOfCalls__InfrastructureCall property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> NumberOfCalls__InfrastructureCallChanged;
        
        /// <summary>
        /// Gets fired before the Action__InfrastructureCall property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Action__InfrastructureCallChanging;
        
        /// <summary>
        /// Gets fired when the Action__InfrastructureCall property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Action__InfrastructureCallChanged;
        
        /// <summary>
        /// Gets fired before the RequiredRole__InfrastructureCall property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> RequiredRole__InfrastructureCallChanging;
        
        /// <summary>
        /// Gets fired when the RequiredRole__InfrastructureCall property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> RequiredRole__InfrastructureCallChanged;
        
        private static ITypedElement RetrieveSignature__InfrastructureCallReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Seff.Seff_performance.InfrastructureCall.ClassInstance)).Resolve("signature__InfrastructureCall")));
        }
        
        /// <summary>
        /// Raises the Signature__InfrastructureCallChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnSignature__InfrastructureCallChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Signature__InfrastructureCallChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the Signature__InfrastructureCallChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnSignature__InfrastructureCallChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Signature__InfrastructureCallChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the Signature__InfrastructureCall property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetSignature__InfrastructureCall(object sender, global::System.EventArgs eventArgs)
        {
            this.Signature__InfrastructureCall = null;
        }
        
        private static ITypedElement RetrieveNumberOfCalls__InfrastructureCallReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Seff.Seff_performance.InfrastructureCall.ClassInstance)).Resolve("numberOfCalls__InfrastructureCall")));
        }
        
        /// <summary>
        /// Raises the NumberOfCalls__InfrastructureCallChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnNumberOfCalls__InfrastructureCallChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.NumberOfCalls__InfrastructureCallChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the NumberOfCalls__InfrastructureCallChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnNumberOfCalls__InfrastructureCallChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.NumberOfCalls__InfrastructureCallChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the NumberOfCalls__InfrastructureCall property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetNumberOfCalls__InfrastructureCall(object sender, global::System.EventArgs eventArgs)
        {
            this.NumberOfCalls__InfrastructureCall = null;
        }
        
        private static ITypedElement RetrieveAction__InfrastructureCallReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Seff.Seff_performance.InfrastructureCall.ClassInstance)).Resolve("action__InfrastructureCall")));
        }
        
        /// <summary>
        /// Raises the Action__InfrastructureCallChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnAction__InfrastructureCallChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Action__InfrastructureCallChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Gets called when the parent model element of the current model element is about to change
        /// </summary>
        /// <param name="oldParent">The old parent model element</param>
        /// <param name="newParent">The new parent model element</param>
        protected override void OnParentChanging(IModelElement newParent, IModelElement oldParent)
        {
            IAbstractInternalControlFlowAction oldAction__InfrastructureCall = ModelHelper.CastAs<IAbstractInternalControlFlowAction>(oldParent);
            IAbstractInternalControlFlowAction newAction__InfrastructureCall = ModelHelper.CastAs<IAbstractInternalControlFlowAction>(newParent);
            ValueChangedEventArgs e = new ValueChangedEventArgs(oldAction__InfrastructureCall, newAction__InfrastructureCall);
            this.OnAction__InfrastructureCallChanging(e);
            this.OnPropertyChanging("Action__InfrastructureCall", e, _action__InfrastructureCallReference);
        }
        
        /// <summary>
        /// Raises the Action__InfrastructureCallChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnAction__InfrastructureCallChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Action__InfrastructureCallChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Gets called when the parent model element of the current model element changes
        /// </summary>
        /// <param name="oldParent">The old parent model element</param>
        /// <param name="newParent">The new parent model element</param>
        protected override void OnParentChanged(IModelElement newParent, IModelElement oldParent)
        {
            IAbstractInternalControlFlowAction oldAction__InfrastructureCall = ModelHelper.CastAs<IAbstractInternalControlFlowAction>(oldParent);
            IAbstractInternalControlFlowAction newAction__InfrastructureCall = ModelHelper.CastAs<IAbstractInternalControlFlowAction>(newParent);
            if ((oldAction__InfrastructureCall != null))
            {
                oldAction__InfrastructureCall.InfrastructureCall__Action.Remove(this);
            }
            if ((newAction__InfrastructureCall != null))
            {
                newAction__InfrastructureCall.InfrastructureCall__Action.Add(this);
            }
            ValueChangedEventArgs e = new ValueChangedEventArgs(oldAction__InfrastructureCall, newAction__InfrastructureCall);
            this.OnAction__InfrastructureCallChanged(e);
            this.OnPropertyChanged("Action__InfrastructureCall", e, _action__InfrastructureCallReference);
            base.OnParentChanged(newParent, oldParent);
        }
        
        private static ITypedElement RetrieveRequiredRole__InfrastructureCallReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Seff.Seff_performance.InfrastructureCall.ClassInstance)).Resolve("requiredRole__InfrastructureCall")));
        }
        
        /// <summary>
        /// Raises the RequiredRole__InfrastructureCallChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnRequiredRole__InfrastructureCallChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.RequiredRole__InfrastructureCallChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the RequiredRole__InfrastructureCallChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnRequiredRole__InfrastructureCallChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.RequiredRole__InfrastructureCallChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the RequiredRole__InfrastructureCall property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetRequiredRole__InfrastructureCall(object sender, global::System.EventArgs eventArgs)
        {
            this.RequiredRole__InfrastructureCall = null;
        }
        
        /// <summary>
        /// Gets the relative URI fragment for the given child model element
        /// </summary>
        /// <returns>A fragment of the relative URI</returns>
        /// <param name="element">The element that should be looked for</param>
        protected override string GetRelativePathForNonIdentifiedChild(IModelElement element)
        {
            if ((element == this.NumberOfCalls__InfrastructureCall))
            {
                return ModelHelper.CreatePath("NumberOfCalls__InfrastructureCall");
            }
            return base.GetRelativePathForNonIdentifiedChild(element);
        }
        
        /// <summary>
        /// Resolves the given URI to a child model element
        /// </summary>
        /// <returns>The model element or null if it could not be found</returns>
        /// <param name="reference">The requested reference name</param>
        /// <param name="index">The index of this reference</param>
        protected override IModelElement GetModelElementForReference(string reference, int index)
        {
            if ((reference == "NUMBEROFCALLS__INFRASTRUCTURECALL"))
            {
                return this.NumberOfCalls__InfrastructureCall;
            }
            return base.GetModelElementForReference(reference, index);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "SIGNATURE__INFRASTRUCTURECALL"))
            {
                this.Signature__InfrastructureCall = ((IInfrastructureSignature)(value));
                return;
            }
            if ((feature == "NUMBEROFCALLS__INFRASTRUCTURECALL"))
            {
                this.NumberOfCalls__InfrastructureCall = ((IPCMRandomVariable)(value));
                return;
            }
            if ((feature == "ACTION__INFRASTRUCTURECALL"))
            {
                this.Action__InfrastructureCall = ((IAbstractInternalControlFlowAction)(value));
                return;
            }
            if ((feature == "REQUIREDROLE__INFRASTRUCTURECALL"))
            {
                this.RequiredRole__InfrastructureCall = ((IInfrastructureRequiredRole)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "Signature__InfrastructureCall"))
            {
                return new Signature__InfrastructureCallProxy(this);
            }
            if ((attribute == "NumberOfCalls__InfrastructureCall"))
            {
                return new NumberOfCalls__InfrastructureCallProxy(this);
            }
            if ((attribute == "Action__InfrastructureCall"))
            {
                return new Action__InfrastructureCallProxy(this);
            }
            if ((attribute == "RequiredRole__InfrastructureCall"))
            {
                return new RequiredRole__InfrastructureCallProxy(this);
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the property expression for the given reference
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="reference">The requested reference in upper case</param>
        protected override NMF.Expressions.INotifyExpression<NMF.Models.IModelElement> GetExpressionForReference(string reference)
        {
            if ((reference == "Signature__InfrastructureCall"))
            {
                return new Signature__InfrastructureCallProxy(this);
            }
            if ((reference == "NumberOfCalls__InfrastructureCall"))
            {
                return new NumberOfCalls__InfrastructureCallProxy(this);
            }
            if ((reference == "Action__InfrastructureCall"))
            {
                return new Action__InfrastructureCallProxy(this);
            }
            if ((reference == "RequiredRole__InfrastructureCall"))
            {
                return new RequiredRole__InfrastructureCallProxy(this);
            }
            return base.GetExpressionForReference(reference);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//seff/seff_performance/Infrastr" +
                        "uctureCall")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// The collection class to to represent the children of the InfrastructureCall class
        /// </summary>
        public class InfrastructureCallChildrenCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private InfrastructureCall _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public InfrastructureCallChildrenCollection(InfrastructureCall parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.NumberOfCalls__InfrastructureCall != null))
                    {
                        count = (count + 1);
                    }
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.NumberOfCalls__InfrastructureCallChanged += this.PropagateValueChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.NumberOfCalls__InfrastructureCallChanged -= this.PropagateValueChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.NumberOfCalls__InfrastructureCall == null))
                {
                    IPCMRandomVariable numberOfCalls__InfrastructureCallCasted = item.As<IPCMRandomVariable>();
                    if ((numberOfCalls__InfrastructureCallCasted != null))
                    {
                        this._parent.NumberOfCalls__InfrastructureCall = numberOfCalls__InfrastructureCallCasted;
                        return;
                    }
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.NumberOfCalls__InfrastructureCall = null;
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.NumberOfCalls__InfrastructureCall))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.NumberOfCalls__InfrastructureCall != null))
                {
                    array[arrayIndex] = this._parent.NumberOfCalls__InfrastructureCall;
                    arrayIndex = (arrayIndex + 1);
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.NumberOfCalls__InfrastructureCall == item))
                {
                    this._parent.NumberOfCalls__InfrastructureCall = null;
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.NumberOfCalls__InfrastructureCall).GetEnumerator();
            }
        }
        
        /// <summary>
        /// The collection class to to represent the children of the InfrastructureCall class
        /// </summary>
        public class InfrastructureCallReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private InfrastructureCall _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public InfrastructureCallReferencedElementsCollection(InfrastructureCall parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.Signature__InfrastructureCall != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.NumberOfCalls__InfrastructureCall != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.Action__InfrastructureCall != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.RequiredRole__InfrastructureCall != null))
                    {
                        count = (count + 1);
                    }
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.Signature__InfrastructureCallChanged += this.PropagateValueChanges;
                this._parent.NumberOfCalls__InfrastructureCallChanged += this.PropagateValueChanges;
                this._parent.Action__InfrastructureCallChanged += this.PropagateValueChanges;
                this._parent.RequiredRole__InfrastructureCallChanged += this.PropagateValueChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.Signature__InfrastructureCallChanged -= this.PropagateValueChanges;
                this._parent.NumberOfCalls__InfrastructureCallChanged -= this.PropagateValueChanges;
                this._parent.Action__InfrastructureCallChanged -= this.PropagateValueChanges;
                this._parent.RequiredRole__InfrastructureCallChanged -= this.PropagateValueChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.Signature__InfrastructureCall == null))
                {
                    IInfrastructureSignature signature__InfrastructureCallCasted = item.As<IInfrastructureSignature>();
                    if ((signature__InfrastructureCallCasted != null))
                    {
                        this._parent.Signature__InfrastructureCall = signature__InfrastructureCallCasted;
                        return;
                    }
                }
                if ((this._parent.NumberOfCalls__InfrastructureCall == null))
                {
                    IPCMRandomVariable numberOfCalls__InfrastructureCallCasted = item.As<IPCMRandomVariable>();
                    if ((numberOfCalls__InfrastructureCallCasted != null))
                    {
                        this._parent.NumberOfCalls__InfrastructureCall = numberOfCalls__InfrastructureCallCasted;
                        return;
                    }
                }
                if ((this._parent.Action__InfrastructureCall == null))
                {
                    IAbstractInternalControlFlowAction action__InfrastructureCallCasted = item.As<IAbstractInternalControlFlowAction>();
                    if ((action__InfrastructureCallCasted != null))
                    {
                        this._parent.Action__InfrastructureCall = action__InfrastructureCallCasted;
                        return;
                    }
                }
                if ((this._parent.RequiredRole__InfrastructureCall == null))
                {
                    IInfrastructureRequiredRole requiredRole__InfrastructureCallCasted = item.As<IInfrastructureRequiredRole>();
                    if ((requiredRole__InfrastructureCallCasted != null))
                    {
                        this._parent.RequiredRole__InfrastructureCall = requiredRole__InfrastructureCallCasted;
                        return;
                    }
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.Signature__InfrastructureCall = null;
                this._parent.NumberOfCalls__InfrastructureCall = null;
                this._parent.Action__InfrastructureCall = null;
                this._parent.RequiredRole__InfrastructureCall = null;
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.Signature__InfrastructureCall))
                {
                    return true;
                }
                if ((item == this._parent.NumberOfCalls__InfrastructureCall))
                {
                    return true;
                }
                if ((item == this._parent.Action__InfrastructureCall))
                {
                    return true;
                }
                if ((item == this._parent.RequiredRole__InfrastructureCall))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.Signature__InfrastructureCall != null))
                {
                    array[arrayIndex] = this._parent.Signature__InfrastructureCall;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.NumberOfCalls__InfrastructureCall != null))
                {
                    array[arrayIndex] = this._parent.NumberOfCalls__InfrastructureCall;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.Action__InfrastructureCall != null))
                {
                    array[arrayIndex] = this._parent.Action__InfrastructureCall;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.RequiredRole__InfrastructureCall != null))
                {
                    array[arrayIndex] = this._parent.RequiredRole__InfrastructureCall;
                    arrayIndex = (arrayIndex + 1);
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.Signature__InfrastructureCall == item))
                {
                    this._parent.Signature__InfrastructureCall = null;
                    return true;
                }
                if ((this._parent.NumberOfCalls__InfrastructureCall == item))
                {
                    this._parent.NumberOfCalls__InfrastructureCall = null;
                    return true;
                }
                if ((this._parent.Action__InfrastructureCall == item))
                {
                    this._parent.Action__InfrastructureCall = null;
                    return true;
                }
                if ((this._parent.RequiredRole__InfrastructureCall == item))
                {
                    this._parent.RequiredRole__InfrastructureCall = null;
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.Signature__InfrastructureCall).Concat(this._parent.NumberOfCalls__InfrastructureCall).Concat(this._parent.Action__InfrastructureCall).Concat(this._parent.RequiredRole__InfrastructureCall).GetEnumerator();
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the signature__InfrastructureCall property
        /// </summary>
        private sealed class Signature__InfrastructureCallProxy : ModelPropertyChange<IInfrastructureCall, IInfrastructureSignature>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Signature__InfrastructureCallProxy(IInfrastructureCall modelElement) : 
                    base(modelElement, "signature__InfrastructureCall")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IInfrastructureSignature Value
            {
                get
                {
                    return this.ModelElement.Signature__InfrastructureCall;
                }
                set
                {
                    this.ModelElement.Signature__InfrastructureCall = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the numberOfCalls__InfrastructureCall property
        /// </summary>
        private sealed class NumberOfCalls__InfrastructureCallProxy : ModelPropertyChange<IInfrastructureCall, IPCMRandomVariable>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public NumberOfCalls__InfrastructureCallProxy(IInfrastructureCall modelElement) : 
                    base(modelElement, "numberOfCalls__InfrastructureCall")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IPCMRandomVariable Value
            {
                get
                {
                    return this.ModelElement.NumberOfCalls__InfrastructureCall;
                }
                set
                {
                    this.ModelElement.NumberOfCalls__InfrastructureCall = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the action__InfrastructureCall property
        /// </summary>
        private sealed class Action__InfrastructureCallProxy : ModelPropertyChange<IInfrastructureCall, IAbstractInternalControlFlowAction>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Action__InfrastructureCallProxy(IInfrastructureCall modelElement) : 
                    base(modelElement, "action__InfrastructureCall")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IAbstractInternalControlFlowAction Value
            {
                get
                {
                    return this.ModelElement.Action__InfrastructureCall;
                }
                set
                {
                    this.ModelElement.Action__InfrastructureCall = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the requiredRole__InfrastructureCall property
        /// </summary>
        private sealed class RequiredRole__InfrastructureCallProxy : ModelPropertyChange<IInfrastructureCall, IInfrastructureRequiredRole>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public RequiredRole__InfrastructureCallProxy(IInfrastructureCall modelElement) : 
                    base(modelElement, "requiredRole__InfrastructureCall")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IInfrastructureRequiredRole Value
            {
                get
                {
                    return this.ModelElement.RequiredRole__InfrastructureCall;
                }
                set
                {
                    this.ModelElement.RequiredRole__InfrastructureCall = value;
                }
            }
        }
    }
}

