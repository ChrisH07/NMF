//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMFExamples.Pcm.Core;
using NMFExamples.Pcm.Core.Entity;
using NMFExamples.Pcm.Parameter;
using NMFExamples.Pcm.Repository;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using global::System.Collections;
using global::System.Collections.Generic;
using global::System.Collections.ObjectModel;
using global::System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMFExamples.Pcm.Core.Composition
{
    
    
    /// <summary>
    /// The default implementation of the ProvidedInfrastructureDelegationConnector class
    /// </summary>
    [XmlNamespaceAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/Core/Composition/5.0")]
    [XmlNamespacePrefixAttribute("composition")]
    [ModelRepresentationClassAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//core/composition/ProvidedInfra" +
        "structureDelegationConnector")]
    [DebuggerDisplayAttribute("ProvidedInfrastructureDelegationConnector {Id}")]
    public partial class ProvidedInfrastructureDelegationConnector : DelegationConnector, IProvidedInfrastructureDelegationConnector, IModelElement
    {
        
        private static Lazy<ITypedElement> _innerProvidedRole__ProvidedInfrastructureDelegationConnectorReference = new Lazy<ITypedElement>(RetrieveInnerProvidedRole__ProvidedInfrastructureDelegationConnectorReference);
        
        /// <summary>
        /// The backing field for the InnerProvidedRole__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        private IInfrastructureProvidedRole _innerProvidedRole__ProvidedInfrastructureDelegationConnector;
        
        private static Lazy<ITypedElement> _outerProvidedRole__ProvidedInfrastructureDelegationConnectorReference = new Lazy<ITypedElement>(RetrieveOuterProvidedRole__ProvidedInfrastructureDelegationConnectorReference);
        
        /// <summary>
        /// The backing field for the OuterProvidedRole__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        private IInfrastructureProvidedRole _outerProvidedRole__ProvidedInfrastructureDelegationConnector;
        
        private static Lazy<ITypedElement> _assemblyContext__ProvidedInfrastructureDelegationConnectorReference = new Lazy<ITypedElement>(RetrieveAssemblyContext__ProvidedInfrastructureDelegationConnectorReference);
        
        /// <summary>
        /// The backing field for the AssemblyContext__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        private IAssemblyContext _assemblyContext__ProvidedInfrastructureDelegationConnector;
        
        private static IClass _classInstance;
        
        /// <summary>
        /// The innerProvidedRole__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        [XmlElementNameAttribute("innerProvidedRole__ProvidedInfrastructureDelegationConnector")]
        [XmlAttributeAttribute(true)]
        public IInfrastructureProvidedRole InnerProvidedRole__ProvidedInfrastructureDelegationConnector
        {
            get
            {
                return this._innerProvidedRole__ProvidedInfrastructureDelegationConnector;
            }
            set
            {
                if ((this._innerProvidedRole__ProvidedInfrastructureDelegationConnector != value))
                {
                    IInfrastructureProvidedRole old = this._innerProvidedRole__ProvidedInfrastructureDelegationConnector;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnInnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanging(e);
                    this.OnPropertyChanging("InnerProvidedRole__ProvidedInfrastructureDelegationConnector", e, _innerProvidedRole__ProvidedInfrastructureDelegationConnectorReference);
                    this._innerProvidedRole__ProvidedInfrastructureDelegationConnector = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetInnerProvidedRole__ProvidedInfrastructureDelegationConnector;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetInnerProvidedRole__ProvidedInfrastructureDelegationConnector;
                    }
                    this.OnInnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanged(e);
                    this.OnPropertyChanged("InnerProvidedRole__ProvidedInfrastructureDelegationConnector", e, _innerProvidedRole__ProvidedInfrastructureDelegationConnectorReference);
                }
            }
        }
        
        /// <summary>
        /// The outerProvidedRole__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        [XmlElementNameAttribute("outerProvidedRole__ProvidedInfrastructureDelegationConnector")]
        [XmlAttributeAttribute(true)]
        public IInfrastructureProvidedRole OuterProvidedRole__ProvidedInfrastructureDelegationConnector
        {
            get
            {
                return this._outerProvidedRole__ProvidedInfrastructureDelegationConnector;
            }
            set
            {
                if ((this._outerProvidedRole__ProvidedInfrastructureDelegationConnector != value))
                {
                    IInfrastructureProvidedRole old = this._outerProvidedRole__ProvidedInfrastructureDelegationConnector;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnOuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanging(e);
                    this.OnPropertyChanging("OuterProvidedRole__ProvidedInfrastructureDelegationConnector", e, _outerProvidedRole__ProvidedInfrastructureDelegationConnectorReference);
                    this._outerProvidedRole__ProvidedInfrastructureDelegationConnector = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetOuterProvidedRole__ProvidedInfrastructureDelegationConnector;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetOuterProvidedRole__ProvidedInfrastructureDelegationConnector;
                    }
                    this.OnOuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanged(e);
                    this.OnPropertyChanged("OuterProvidedRole__ProvidedInfrastructureDelegationConnector", e, _outerProvidedRole__ProvidedInfrastructureDelegationConnectorReference);
                }
            }
        }
        
        /// <summary>
        /// The assemblyContext__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        [XmlElementNameAttribute("assemblyContext__ProvidedInfrastructureDelegationConnector")]
        [XmlAttributeAttribute(true)]
        public IAssemblyContext AssemblyContext__ProvidedInfrastructureDelegationConnector
        {
            get
            {
                return this._assemblyContext__ProvidedInfrastructureDelegationConnector;
            }
            set
            {
                if ((this._assemblyContext__ProvidedInfrastructureDelegationConnector != value))
                {
                    IAssemblyContext old = this._assemblyContext__ProvidedInfrastructureDelegationConnector;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnAssemblyContext__ProvidedInfrastructureDelegationConnectorChanging(e);
                    this.OnPropertyChanging("AssemblyContext__ProvidedInfrastructureDelegationConnector", e, _assemblyContext__ProvidedInfrastructureDelegationConnectorReference);
                    this._assemblyContext__ProvidedInfrastructureDelegationConnector = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetAssemblyContext__ProvidedInfrastructureDelegationConnector;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetAssemblyContext__ProvidedInfrastructureDelegationConnector;
                    }
                    this.OnAssemblyContext__ProvidedInfrastructureDelegationConnectorChanged(e);
                    this.OnPropertyChanged("AssemblyContext__ProvidedInfrastructureDelegationConnector", e, _assemblyContext__ProvidedInfrastructureDelegationConnectorReference);
                }
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new ProvidedInfrastructureDelegationConnectorReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//core/composition/ProvidedInfra" +
                            "structureDelegationConnector")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Gets fired before the InnerProvidedRole__ProvidedInfrastructureDelegationConnector property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanging;
        
        /// <summary>
        /// Gets fired when the InnerProvidedRole__ProvidedInfrastructureDelegationConnector property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanged;
        
        /// <summary>
        /// Gets fired before the OuterProvidedRole__ProvidedInfrastructureDelegationConnector property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanging;
        
        /// <summary>
        /// Gets fired when the OuterProvidedRole__ProvidedInfrastructureDelegationConnector property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanged;
        
        /// <summary>
        /// Gets fired before the AssemblyContext__ProvidedInfrastructureDelegationConnector property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> AssemblyContext__ProvidedInfrastructureDelegationConnectorChanging;
        
        /// <summary>
        /// Gets fired when the AssemblyContext__ProvidedInfrastructureDelegationConnector property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> AssemblyContext__ProvidedInfrastructureDelegationConnectorChanged;
        
        private static ITypedElement RetrieveInnerProvidedRole__ProvidedInfrastructureDelegationConnectorReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Core.Composition.ProvidedInfrastructureDelegationConnector.ClassInstance)).Resolve("innerProvidedRole__ProvidedInfrastructureDelegationConnector")));
        }
        
        /// <summary>
        /// Raises the InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnInnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnInnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the InnerProvidedRole__ProvidedInfrastructureDelegationConnector property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetInnerProvidedRole__ProvidedInfrastructureDelegationConnector(object sender, global::System.EventArgs eventArgs)
        {
            this.InnerProvidedRole__ProvidedInfrastructureDelegationConnector = null;
        }
        
        private static ITypedElement RetrieveOuterProvidedRole__ProvidedInfrastructureDelegationConnectorReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Core.Composition.ProvidedInfrastructureDelegationConnector.ClassInstance)).Resolve("outerProvidedRole__ProvidedInfrastructureDelegationConnector")));
        }
        
        /// <summary>
        /// Raises the OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnOuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnOuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the OuterProvidedRole__ProvidedInfrastructureDelegationConnector property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetOuterProvidedRole__ProvidedInfrastructureDelegationConnector(object sender, global::System.EventArgs eventArgs)
        {
            this.OuterProvidedRole__ProvidedInfrastructureDelegationConnector = null;
        }
        
        private static ITypedElement RetrieveAssemblyContext__ProvidedInfrastructureDelegationConnectorReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Core.Composition.ProvidedInfrastructureDelegationConnector.ClassInstance)).Resolve("assemblyContext__ProvidedInfrastructureDelegationConnector")));
        }
        
        /// <summary>
        /// Raises the AssemblyContext__ProvidedInfrastructureDelegationConnectorChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnAssemblyContext__ProvidedInfrastructureDelegationConnectorChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.AssemblyContext__ProvidedInfrastructureDelegationConnectorChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the AssemblyContext__ProvidedInfrastructureDelegationConnectorChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnAssemblyContext__ProvidedInfrastructureDelegationConnectorChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.AssemblyContext__ProvidedInfrastructureDelegationConnectorChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the AssemblyContext__ProvidedInfrastructureDelegationConnector property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetAssemblyContext__ProvidedInfrastructureDelegationConnector(object sender, global::System.EventArgs eventArgs)
        {
            this.AssemblyContext__ProvidedInfrastructureDelegationConnector = null;
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "INNERPROVIDEDROLE__PROVIDEDINFRASTRUCTUREDELEGATIONCONNECTOR"))
            {
                this.InnerProvidedRole__ProvidedInfrastructureDelegationConnector = ((IInfrastructureProvidedRole)(value));
                return;
            }
            if ((feature == "OUTERPROVIDEDROLE__PROVIDEDINFRASTRUCTUREDELEGATIONCONNECTOR"))
            {
                this.OuterProvidedRole__ProvidedInfrastructureDelegationConnector = ((IInfrastructureProvidedRole)(value));
                return;
            }
            if ((feature == "ASSEMBLYCONTEXT__PROVIDEDINFRASTRUCTUREDELEGATIONCONNECTOR"))
            {
                this.AssemblyContext__ProvidedInfrastructureDelegationConnector = ((IAssemblyContext)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "InnerProvidedRole__ProvidedInfrastructureDelegationConnector"))
            {
                return new InnerProvidedRole__ProvidedInfrastructureDelegationConnectorProxy(this);
            }
            if ((attribute == "OuterProvidedRole__ProvidedInfrastructureDelegationConnector"))
            {
                return new OuterProvidedRole__ProvidedInfrastructureDelegationConnectorProxy(this);
            }
            if ((attribute == "AssemblyContext__ProvidedInfrastructureDelegationConnector"))
            {
                return new AssemblyContext__ProvidedInfrastructureDelegationConnectorProxy(this);
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the property expression for the given reference
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="reference">The requested reference in upper case</param>
        protected override NMF.Expressions.INotifyExpression<NMF.Models.IModelElement> GetExpressionForReference(string reference)
        {
            if ((reference == "InnerProvidedRole__ProvidedInfrastructureDelegationConnector"))
            {
                return new InnerProvidedRole__ProvidedInfrastructureDelegationConnectorProxy(this);
            }
            if ((reference == "OuterProvidedRole__ProvidedInfrastructureDelegationConnector"))
            {
                return new OuterProvidedRole__ProvidedInfrastructureDelegationConnectorProxy(this);
            }
            if ((reference == "AssemblyContext__ProvidedInfrastructureDelegationConnector"))
            {
                return new AssemblyContext__ProvidedInfrastructureDelegationConnectorProxy(this);
            }
            return base.GetExpressionForReference(reference);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//core/composition/ProvidedInfra" +
                        "structureDelegationConnector")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// The collection class to to represent the children of the ProvidedInfrastructureDelegationConnector class
        /// </summary>
        public class ProvidedInfrastructureDelegationConnectorReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private ProvidedInfrastructureDelegationConnector _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public ProvidedInfrastructureDelegationConnectorReferencedElementsCollection(ProvidedInfrastructureDelegationConnector parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector != null))
                    {
                        count = (count + 1);
                    }
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanged += this.PropagateValueChanges;
                this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanged += this.PropagateValueChanges;
                this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnectorChanged += this.PropagateValueChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnectorChanged -= this.PropagateValueChanges;
                this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnectorChanged -= this.PropagateValueChanges;
                this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnectorChanged -= this.PropagateValueChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector == null))
                {
                    IInfrastructureProvidedRole innerProvidedRole__ProvidedInfrastructureDelegationConnectorCasted = item.As<IInfrastructureProvidedRole>();
                    if ((innerProvidedRole__ProvidedInfrastructureDelegationConnectorCasted != null))
                    {
                        this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector = innerProvidedRole__ProvidedInfrastructureDelegationConnectorCasted;
                        return;
                    }
                }
                if ((this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector == null))
                {
                    IInfrastructureProvidedRole outerProvidedRole__ProvidedInfrastructureDelegationConnectorCasted = item.As<IInfrastructureProvidedRole>();
                    if ((outerProvidedRole__ProvidedInfrastructureDelegationConnectorCasted != null))
                    {
                        this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector = outerProvidedRole__ProvidedInfrastructureDelegationConnectorCasted;
                        return;
                    }
                }
                if ((this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector == null))
                {
                    IAssemblyContext assemblyContext__ProvidedInfrastructureDelegationConnectorCasted = item.As<IAssemblyContext>();
                    if ((assemblyContext__ProvidedInfrastructureDelegationConnectorCasted != null))
                    {
                        this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector = assemblyContext__ProvidedInfrastructureDelegationConnectorCasted;
                        return;
                    }
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector = null;
                this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector = null;
                this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector = null;
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector))
                {
                    return true;
                }
                if ((item == this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector))
                {
                    return true;
                }
                if ((item == this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector != null))
                {
                    array[arrayIndex] = this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector != null))
                {
                    array[arrayIndex] = this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector != null))
                {
                    array[arrayIndex] = this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector;
                    arrayIndex = (arrayIndex + 1);
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector == item))
                {
                    this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector = null;
                    return true;
                }
                if ((this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector == item))
                {
                    this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector = null;
                    return true;
                }
                if ((this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector == item))
                {
                    this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector = null;
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.InnerProvidedRole__ProvidedInfrastructureDelegationConnector).Concat(this._parent.OuterProvidedRole__ProvidedInfrastructureDelegationConnector).Concat(this._parent.AssemblyContext__ProvidedInfrastructureDelegationConnector).GetEnumerator();
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the innerProvidedRole__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        private sealed class InnerProvidedRole__ProvidedInfrastructureDelegationConnectorProxy : ModelPropertyChange<IProvidedInfrastructureDelegationConnector, IInfrastructureProvidedRole>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public InnerProvidedRole__ProvidedInfrastructureDelegationConnectorProxy(IProvidedInfrastructureDelegationConnector modelElement) : 
                    base(modelElement, "innerProvidedRole__ProvidedInfrastructureDelegationConnector")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IInfrastructureProvidedRole Value
            {
                get
                {
                    return this.ModelElement.InnerProvidedRole__ProvidedInfrastructureDelegationConnector;
                }
                set
                {
                    this.ModelElement.InnerProvidedRole__ProvidedInfrastructureDelegationConnector = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the outerProvidedRole__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        private sealed class OuterProvidedRole__ProvidedInfrastructureDelegationConnectorProxy : ModelPropertyChange<IProvidedInfrastructureDelegationConnector, IInfrastructureProvidedRole>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public OuterProvidedRole__ProvidedInfrastructureDelegationConnectorProxy(IProvidedInfrastructureDelegationConnector modelElement) : 
                    base(modelElement, "outerProvidedRole__ProvidedInfrastructureDelegationConnector")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IInfrastructureProvidedRole Value
            {
                get
                {
                    return this.ModelElement.OuterProvidedRole__ProvidedInfrastructureDelegationConnector;
                }
                set
                {
                    this.ModelElement.OuterProvidedRole__ProvidedInfrastructureDelegationConnector = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the assemblyContext__ProvidedInfrastructureDelegationConnector property
        /// </summary>
        private sealed class AssemblyContext__ProvidedInfrastructureDelegationConnectorProxy : ModelPropertyChange<IProvidedInfrastructureDelegationConnector, IAssemblyContext>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public AssemblyContext__ProvidedInfrastructureDelegationConnectorProxy(IProvidedInfrastructureDelegationConnector modelElement) : 
                    base(modelElement, "assemblyContext__ProvidedInfrastructureDelegationConnector")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IAssemblyContext Value
            {
                get
                {
                    return this.ModelElement.AssemblyContext__ProvidedInfrastructureDelegationConnector;
                }
                set
                {
                    this.ModelElement.AssemblyContext__ProvidedInfrastructureDelegationConnector = value;
                }
            }
        }
    }
}

