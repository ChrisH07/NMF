//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMFExamples.Pcm.Core;
using NMFExamples.Pcm.Core.Entity;
using NMFExamples.Pcm.Parameter;
using NMFExamples.Pcm.Protocol;
using NMFExamples.Pcm.Reliability;
using NMFExamples.Pcm.Resourcetype;
using NMFExamples.Pcm.Seff;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using global::System.Collections;
using global::System.Collections.Generic;
using global::System.Collections.ObjectModel;
using global::System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMFExamples.Pcm.Repository
{
    
    
    public class ParameterModifierConverter : TypeConverter
    {
        
        public override bool CanConvertFrom(ITypeDescriptorContext context, global::System.Type sourceType)
        {
            return (sourceType == typeof(string));
        }
        
        public override bool CanConvertTo(ITypeDescriptorContext context, global::System.Type destinationType)
        {
            return (destinationType == typeof(string));
        }
        
        public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
        {
            if ((value == null))
            {
                return default(ParameterModifier);
            }
            string valueString = value.ToString();
            if ((valueString == "none"))
            {
                return ParameterModifier.None;
            }
            if ((valueString == "in"))
            {
                return ParameterModifier.In;
            }
            if ((valueString == "out"))
            {
                return ParameterModifier.Out;
            }
            if ((valueString == "inout"))
            {
                return ParameterModifier.Inout;
            }
            return default(ParameterModifier);
        }
        
        public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, global::System.Type destinationType)
        {
            if ((value == null))
            {
                return null;
            }
            ParameterModifier valueCasted = ((ParameterModifier)(value));
            if ((valueCasted == ParameterModifier.None))
            {
                return "none";
            }
            if ((valueCasted == ParameterModifier.In))
            {
                return "in";
            }
            if ((valueCasted == ParameterModifier.Out))
            {
                return "out";
            }
            if ((valueCasted == ParameterModifier.Inout))
            {
                return "inout";
            }
            throw new ArgumentOutOfRangeException("value");
        }
    }
}

