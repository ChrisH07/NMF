//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMFExamples.Pcm.Core.Entity;
using NMFExamples.Pcm.Parameter;
using NMFExamples.Pcm.Repository;
using NMFExamples.Pcm.System;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using global::System.Collections;
using global::System.Collections.Generic;
using global::System.Collections.ObjectModel;
using global::System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMFExamples.Pcm.Qosannotations
{
    
    
    /// <summary>
    /// The default implementation of the SpecifiedOutputParameterAbstraction class
    /// </summary>
    [XmlNamespaceAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/QoSAnnotations/5.0")]
    [XmlNamespacePrefixAttribute("qosannotations")]
    [ModelRepresentationClassAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//qosannotations/SpecifiedOutput" +
        "ParameterAbstraction")]
    public abstract partial class SpecifiedOutputParameterAbstraction : ModelElement, ISpecifiedOutputParameterAbstraction, IModelElement
    {
        
        private static Lazy<ITypedElement> _signature_SpecifiedOutputParameterAbstractionReference = new Lazy<ITypedElement>(RetrieveSignature_SpecifiedOutputParameterAbstractionReference);
        
        /// <summary>
        /// The backing field for the Signature_SpecifiedOutputParameterAbstraction property
        /// </summary>
        private ISignature _signature_SpecifiedOutputParameterAbstraction;
        
        private static Lazy<ITypedElement> _role_SpecifiedOutputParameterAbstractionReference = new Lazy<ITypedElement>(RetrieveRole_SpecifiedOutputParameterAbstractionReference);
        
        /// <summary>
        /// The backing field for the Role_SpecifiedOutputParameterAbstraction property
        /// </summary>
        private IRole _role_SpecifiedOutputParameterAbstraction;
        
        private static Lazy<ITypedElement> _expectedExternalOutputs_SpecifiedOutputParameterAbstractionReference = new Lazy<ITypedElement>(RetrieveExpectedExternalOutputs_SpecifiedOutputParameterAbstractionReference);
        
        /// <summary>
        /// The backing field for the ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction property
        /// </summary>
        private SpecifiedOutputParameterAbstractionExpectedExternalOutputs_SpecifiedOutputParameterAbstractionCollection _expectedExternalOutputs_SpecifiedOutputParameterAbstraction;
        
        private static Lazy<ITypedElement> _qosAnnotations_SpecifiedOutputParameterAbstractionReference = new Lazy<ITypedElement>(RetrieveQosAnnotations_SpecifiedOutputParameterAbstractionReference);
        
        private static IClass _classInstance;
        
        public SpecifiedOutputParameterAbstraction()
        {
            this._expectedExternalOutputs_SpecifiedOutputParameterAbstraction = new SpecifiedOutputParameterAbstractionExpectedExternalOutputs_SpecifiedOutputParameterAbstractionCollection(this);
            this._expectedExternalOutputs_SpecifiedOutputParameterAbstraction.CollectionChanging += this.ExpectedExternalOutputs_SpecifiedOutputParameterAbstractionCollectionChanging;
            this._expectedExternalOutputs_SpecifiedOutputParameterAbstraction.CollectionChanged += this.ExpectedExternalOutputs_SpecifiedOutputParameterAbstractionCollectionChanged;
        }
        
        /// <summary>
        /// The signature_SpecifiedOutputParameterAbstraction property
        /// </summary>
        [XmlElementNameAttribute("signature_SpecifiedOutputParameterAbstraction")]
        [XmlAttributeAttribute(true)]
        public ISignature Signature_SpecifiedOutputParameterAbstraction
        {
            get
            {
                return this._signature_SpecifiedOutputParameterAbstraction;
            }
            set
            {
                if ((this._signature_SpecifiedOutputParameterAbstraction != value))
                {
                    ISignature old = this._signature_SpecifiedOutputParameterAbstraction;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnSignature_SpecifiedOutputParameterAbstractionChanging(e);
                    this.OnPropertyChanging("Signature_SpecifiedOutputParameterAbstraction", e, _signature_SpecifiedOutputParameterAbstractionReference);
                    this._signature_SpecifiedOutputParameterAbstraction = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetSignature_SpecifiedOutputParameterAbstraction;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetSignature_SpecifiedOutputParameterAbstraction;
                    }
                    this.OnSignature_SpecifiedOutputParameterAbstractionChanged(e);
                    this.OnPropertyChanged("Signature_SpecifiedOutputParameterAbstraction", e, _signature_SpecifiedOutputParameterAbstractionReference);
                }
            }
        }
        
        /// <summary>
        /// The role_SpecifiedOutputParameterAbstraction property
        /// </summary>
        [XmlElementNameAttribute("role_SpecifiedOutputParameterAbstraction")]
        [XmlAttributeAttribute(true)]
        public IRole Role_SpecifiedOutputParameterAbstraction
        {
            get
            {
                return this._role_SpecifiedOutputParameterAbstraction;
            }
            set
            {
                if ((this._role_SpecifiedOutputParameterAbstraction != value))
                {
                    IRole old = this._role_SpecifiedOutputParameterAbstraction;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnRole_SpecifiedOutputParameterAbstractionChanging(e);
                    this.OnPropertyChanging("Role_SpecifiedOutputParameterAbstraction", e, _role_SpecifiedOutputParameterAbstractionReference);
                    this._role_SpecifiedOutputParameterAbstraction = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetRole_SpecifiedOutputParameterAbstraction;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetRole_SpecifiedOutputParameterAbstraction;
                    }
                    this.OnRole_SpecifiedOutputParameterAbstractionChanged(e);
                    this.OnPropertyChanged("Role_SpecifiedOutputParameterAbstraction", e, _role_SpecifiedOutputParameterAbstractionReference);
                }
            }
        }
        
        /// <summary>
        /// The expectedExternalOutputs_SpecifiedOutputParameterAbstraction property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("expectedExternalOutputs_SpecifiedOutputParameterAbstraction")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("specifiedOutputParameterAbstraction_expectedExternalOutputs_VariableUsage")]
        [ConstantAttribute()]
        public IListExpression<IVariableUsage> ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction
        {
            get
            {
                return this._expectedExternalOutputs_SpecifiedOutputParameterAbstraction;
            }
        }
        
        /// <summary>
        /// The qosAnnotations_SpecifiedOutputParameterAbstraction property
        /// </summary>
        [XmlElementNameAttribute("qosAnnotations_SpecifiedOutputParameterAbstraction")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("specifiedOutputParameterAbstractions_QoSAnnotations")]
        public IQoSAnnotations QosAnnotations_SpecifiedOutputParameterAbstraction
        {
            get
            {
                return ModelHelper.CastAs<IQoSAnnotations>(this.Parent);
            }
            set
            {
                this.Parent = value;
            }
        }
        
        /// <summary>
        /// Gets the child model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> Children
        {
            get
            {
                return base.Children.Concat(new SpecifiedOutputParameterAbstractionChildrenCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new SpecifiedOutputParameterAbstractionReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//qosannotations/SpecifiedOutput" +
                            "ParameterAbstraction")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Gets fired before the Signature_SpecifiedOutputParameterAbstraction property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Signature_SpecifiedOutputParameterAbstractionChanging;
        
        /// <summary>
        /// Gets fired when the Signature_SpecifiedOutputParameterAbstraction property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Signature_SpecifiedOutputParameterAbstractionChanged;
        
        /// <summary>
        /// Gets fired before the Role_SpecifiedOutputParameterAbstraction property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Role_SpecifiedOutputParameterAbstractionChanging;
        
        /// <summary>
        /// Gets fired when the Role_SpecifiedOutputParameterAbstraction property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> Role_SpecifiedOutputParameterAbstractionChanged;
        
        /// <summary>
        /// Gets fired before the QosAnnotations_SpecifiedOutputParameterAbstraction property changes its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> QosAnnotations_SpecifiedOutputParameterAbstractionChanging;
        
        /// <summary>
        /// Gets fired when the QosAnnotations_SpecifiedOutputParameterAbstraction property changed its value
        /// </summary>
        public event global::System.EventHandler<ValueChangedEventArgs> QosAnnotations_SpecifiedOutputParameterAbstractionChanged;
        
        private static ITypedElement RetrieveSignature_SpecifiedOutputParameterAbstractionReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Qosannotations.SpecifiedOutputParameterAbstraction.ClassInstance)).Resolve("signature_SpecifiedOutputParameterAbstraction")));
        }
        
        /// <summary>
        /// Raises the Signature_SpecifiedOutputParameterAbstractionChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnSignature_SpecifiedOutputParameterAbstractionChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Signature_SpecifiedOutputParameterAbstractionChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the Signature_SpecifiedOutputParameterAbstractionChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnSignature_SpecifiedOutputParameterAbstractionChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Signature_SpecifiedOutputParameterAbstractionChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the Signature_SpecifiedOutputParameterAbstraction property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetSignature_SpecifiedOutputParameterAbstraction(object sender, global::System.EventArgs eventArgs)
        {
            this.Signature_SpecifiedOutputParameterAbstraction = null;
        }
        
        private static ITypedElement RetrieveRole_SpecifiedOutputParameterAbstractionReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Qosannotations.SpecifiedOutputParameterAbstraction.ClassInstance)).Resolve("role_SpecifiedOutputParameterAbstraction")));
        }
        
        /// <summary>
        /// Raises the Role_SpecifiedOutputParameterAbstractionChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnRole_SpecifiedOutputParameterAbstractionChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Role_SpecifiedOutputParameterAbstractionChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the Role_SpecifiedOutputParameterAbstractionChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnRole_SpecifiedOutputParameterAbstractionChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.Role_SpecifiedOutputParameterAbstractionChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the Role_SpecifiedOutputParameterAbstraction property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetRole_SpecifiedOutputParameterAbstraction(object sender, global::System.EventArgs eventArgs)
        {
            this.Role_SpecifiedOutputParameterAbstraction = null;
        }
        
        private static ITypedElement RetrieveExpectedExternalOutputs_SpecifiedOutputParameterAbstractionReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Qosannotations.SpecifiedOutputParameterAbstraction.ClassInstance)).Resolve("expectedExternalOutputs_SpecifiedOutputParameterAbstraction")));
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void ExpectedExternalOutputs_SpecifiedOutputParameterAbstractionCollectionChanging(object sender, NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanging("ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction", e, _expectedExternalOutputs_SpecifiedOutputParameterAbstractionReference);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void ExpectedExternalOutputs_SpecifiedOutputParameterAbstractionCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction", e, _expectedExternalOutputs_SpecifiedOutputParameterAbstractionReference);
        }
        
        private static ITypedElement RetrieveQosAnnotations_SpecifiedOutputParameterAbstractionReference()
        {
            return ((ITypedElement)(((ModelElement)(NMFExamples.Pcm.Qosannotations.SpecifiedOutputParameterAbstraction.ClassInstance)).Resolve("qosAnnotations_SpecifiedOutputParameterAbstraction")));
        }
        
        /// <summary>
        /// Raises the QosAnnotations_SpecifiedOutputParameterAbstractionChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnQosAnnotations_SpecifiedOutputParameterAbstractionChanging(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.QosAnnotations_SpecifiedOutputParameterAbstractionChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Gets called when the parent model element of the current model element is about to change
        /// </summary>
        /// <param name="oldParent">The old parent model element</param>
        /// <param name="newParent">The new parent model element</param>
        protected override void OnParentChanging(IModelElement newParent, IModelElement oldParent)
        {
            IQoSAnnotations oldQosAnnotations_SpecifiedOutputParameterAbstraction = ModelHelper.CastAs<IQoSAnnotations>(oldParent);
            IQoSAnnotations newQosAnnotations_SpecifiedOutputParameterAbstraction = ModelHelper.CastAs<IQoSAnnotations>(newParent);
            ValueChangedEventArgs e = new ValueChangedEventArgs(oldQosAnnotations_SpecifiedOutputParameterAbstraction, newQosAnnotations_SpecifiedOutputParameterAbstraction);
            this.OnQosAnnotations_SpecifiedOutputParameterAbstractionChanging(e);
            this.OnPropertyChanging("QosAnnotations_SpecifiedOutputParameterAbstraction", e, _qosAnnotations_SpecifiedOutputParameterAbstractionReference);
        }
        
        /// <summary>
        /// Raises the QosAnnotations_SpecifiedOutputParameterAbstractionChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnQosAnnotations_SpecifiedOutputParameterAbstractionChanged(ValueChangedEventArgs eventArgs)
        {
            global::System.EventHandler<ValueChangedEventArgs> handler = this.QosAnnotations_SpecifiedOutputParameterAbstractionChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Gets called when the parent model element of the current model element changes
        /// </summary>
        /// <param name="oldParent">The old parent model element</param>
        /// <param name="newParent">The new parent model element</param>
        protected override void OnParentChanged(IModelElement newParent, IModelElement oldParent)
        {
            IQoSAnnotations oldQosAnnotations_SpecifiedOutputParameterAbstraction = ModelHelper.CastAs<IQoSAnnotations>(oldParent);
            IQoSAnnotations newQosAnnotations_SpecifiedOutputParameterAbstraction = ModelHelper.CastAs<IQoSAnnotations>(newParent);
            if ((oldQosAnnotations_SpecifiedOutputParameterAbstraction != null))
            {
                oldQosAnnotations_SpecifiedOutputParameterAbstraction.SpecifiedOutputParameterAbstractions_QoSAnnotations.Remove(this);
            }
            if ((newQosAnnotations_SpecifiedOutputParameterAbstraction != null))
            {
                newQosAnnotations_SpecifiedOutputParameterAbstraction.SpecifiedOutputParameterAbstractions_QoSAnnotations.Add(this);
            }
            ValueChangedEventArgs e = new ValueChangedEventArgs(oldQosAnnotations_SpecifiedOutputParameterAbstraction, newQosAnnotations_SpecifiedOutputParameterAbstraction);
            this.OnQosAnnotations_SpecifiedOutputParameterAbstractionChanged(e);
            this.OnPropertyChanged("QosAnnotations_SpecifiedOutputParameterAbstraction", e, _qosAnnotations_SpecifiedOutputParameterAbstractionReference);
            base.OnParentChanged(newParent, oldParent);
        }
        
        /// <summary>
        /// Gets the relative URI fragment for the given child model element
        /// </summary>
        /// <returns>A fragment of the relative URI</returns>
        /// <param name="element">The element that should be looked for</param>
        protected override string GetRelativePathForNonIdentifiedChild(IModelElement element)
        {
            int expectedExternalOutputs_SpecifiedOutputParameterAbstractionIndex = ModelHelper.IndexOfReference(this.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction, element);
            if ((expectedExternalOutputs_SpecifiedOutputParameterAbstractionIndex != -1))
            {
                return ModelHelper.CreatePath("expectedExternalOutputs_SpecifiedOutputParameterAbstraction", expectedExternalOutputs_SpecifiedOutputParameterAbstractionIndex);
            }
            return base.GetRelativePathForNonIdentifiedChild(element);
        }
        
        /// <summary>
        /// Resolves the given URI to a child model element
        /// </summary>
        /// <returns>The model element or null if it could not be found</returns>
        /// <param name="reference">The requested reference name</param>
        /// <param name="index">The index of this reference</param>
        protected override IModelElement GetModelElementForReference(string reference, int index)
        {
            if ((reference == "EXPECTEDEXTERNALOUTPUTS_SPECIFIEDOUTPUTPARAMETERABSTRACTION"))
            {
                if ((index < this.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Count))
                {
                    return this.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction[index];
                }
                else
                {
                    return null;
                }
            }
            return base.GetModelElementForReference(reference, index);
        }
        
        /// <summary>
        /// Gets the Model element collection for the given feature
        /// </summary>
        /// <returns>A non-generic list of elements</returns>
        /// <param name="feature">The requested feature</param>
        protected override global::System.Collections.IList GetCollectionForFeature(string feature)
        {
            if ((feature == "EXPECTEDEXTERNALOUTPUTS_SPECIFIEDOUTPUTPARAMETERABSTRACTION"))
            {
                return this._expectedExternalOutputs_SpecifiedOutputParameterAbstraction;
            }
            return base.GetCollectionForFeature(feature);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "SIGNATURE_SPECIFIEDOUTPUTPARAMETERABSTRACTION"))
            {
                this.Signature_SpecifiedOutputParameterAbstraction = ((ISignature)(value));
                return;
            }
            if ((feature == "ROLE_SPECIFIEDOUTPUTPARAMETERABSTRACTION"))
            {
                this.Role_SpecifiedOutputParameterAbstraction = ((IRole)(value));
                return;
            }
            if ((feature == "QOSANNOTATIONS_SPECIFIEDOUTPUTPARAMETERABSTRACTION"))
            {
                this.QosAnnotations_SpecifiedOutputParameterAbstraction = ((IQoSAnnotations)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "Signature_SpecifiedOutputParameterAbstraction"))
            {
                return new Signature_SpecifiedOutputParameterAbstractionProxy(this);
            }
            if ((attribute == "Role_SpecifiedOutputParameterAbstraction"))
            {
                return new Role_SpecifiedOutputParameterAbstractionProxy(this);
            }
            if ((attribute == "QosAnnotations_SpecifiedOutputParameterAbstraction"))
            {
                return new QosAnnotations_SpecifiedOutputParameterAbstractionProxy(this);
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the property expression for the given reference
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="reference">The requested reference in upper case</param>
        protected override NMF.Expressions.INotifyExpression<NMF.Models.IModelElement> GetExpressionForReference(string reference)
        {
            if ((reference == "Signature_SpecifiedOutputParameterAbstraction"))
            {
                return new Signature_SpecifiedOutputParameterAbstractionProxy(this);
            }
            if ((reference == "Role_SpecifiedOutputParameterAbstraction"))
            {
                return new Role_SpecifiedOutputParameterAbstractionProxy(this);
            }
            if ((reference == "QosAnnotations_SpecifiedOutputParameterAbstraction"))
            {
                return new QosAnnotations_SpecifiedOutputParameterAbstractionProxy(this);
            }
            return base.GetExpressionForReference(reference);
        }
        
        /// <summary>
        /// Gets the property name for the given container
        /// </summary>
        /// <returns>The name of the respective container reference</returns>
        /// <param name="container">The container object</param>
        protected override string GetCompositionName(object container)
        {
            if ((container == this._expectedExternalOutputs_SpecifiedOutputParameterAbstraction))
            {
                return "expectedExternalOutputs_SpecifiedOutputParameterAbstraction";
            }
            return base.GetCompositionName(container);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//qosannotations/SpecifiedOutput" +
                        "ParameterAbstraction")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// The collection class to to represent the children of the SpecifiedOutputParameterAbstraction class
        /// </summary>
        public class SpecifiedOutputParameterAbstractionChildrenCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private SpecifiedOutputParameterAbstraction _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public SpecifiedOutputParameterAbstractionChildrenCollection(SpecifiedOutputParameterAbstraction parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    count = (count + this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Count);
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                IVariableUsage expectedExternalOutputs_SpecifiedOutputParameterAbstractionCasted = item.As<IVariableUsage>();
                if ((expectedExternalOutputs_SpecifiedOutputParameterAbstractionCasted != null))
                {
                    this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Add(expectedExternalOutputs_SpecifiedOutputParameterAbstractionCasted);
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Clear();
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if (this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Contains(item))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                IEnumerator<IModelElement> expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator = this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.GetEnumerator();
                try
                {
                    for (
                    ; expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator.Dispose();
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                IVariableUsage variableUsageItem = item.As<IVariableUsage>();
                if (((variableUsageItem != null) 
                            && this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Remove(variableUsageItem)))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction).GetEnumerator();
            }
        }
        
        /// <summary>
        /// The collection class to to represent the children of the SpecifiedOutputParameterAbstraction class
        /// </summary>
        public class SpecifiedOutputParameterAbstractionReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private SpecifiedOutputParameterAbstraction _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public SpecifiedOutputParameterAbstractionReferencedElementsCollection(SpecifiedOutputParameterAbstraction parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.Signature_SpecifiedOutputParameterAbstraction != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.Role_SpecifiedOutputParameterAbstraction != null))
                    {
                        count = (count + 1);
                    }
                    count = (count + this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Count);
                    if ((this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction != null))
                    {
                        count = (count + 1);
                    }
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.Signature_SpecifiedOutputParameterAbstractionChanged += this.PropagateValueChanges;
                this._parent.Role_SpecifiedOutputParameterAbstractionChanged += this.PropagateValueChanges;
                this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.QosAnnotations_SpecifiedOutputParameterAbstractionChanged += this.PropagateValueChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.Signature_SpecifiedOutputParameterAbstractionChanged -= this.PropagateValueChanges;
                this._parent.Role_SpecifiedOutputParameterAbstractionChanged -= this.PropagateValueChanges;
                this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.QosAnnotations_SpecifiedOutputParameterAbstractionChanged -= this.PropagateValueChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.Signature_SpecifiedOutputParameterAbstraction == null))
                {
                    ISignature signature_SpecifiedOutputParameterAbstractionCasted = item.As<ISignature>();
                    if ((signature_SpecifiedOutputParameterAbstractionCasted != null))
                    {
                        this._parent.Signature_SpecifiedOutputParameterAbstraction = signature_SpecifiedOutputParameterAbstractionCasted;
                        return;
                    }
                }
                if ((this._parent.Role_SpecifiedOutputParameterAbstraction == null))
                {
                    IRole role_SpecifiedOutputParameterAbstractionCasted = item.As<IRole>();
                    if ((role_SpecifiedOutputParameterAbstractionCasted != null))
                    {
                        this._parent.Role_SpecifiedOutputParameterAbstraction = role_SpecifiedOutputParameterAbstractionCasted;
                        return;
                    }
                }
                IVariableUsage expectedExternalOutputs_SpecifiedOutputParameterAbstractionCasted = item.As<IVariableUsage>();
                if ((expectedExternalOutputs_SpecifiedOutputParameterAbstractionCasted != null))
                {
                    this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Add(expectedExternalOutputs_SpecifiedOutputParameterAbstractionCasted);
                }
                if ((this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction == null))
                {
                    IQoSAnnotations qosAnnotations_SpecifiedOutputParameterAbstractionCasted = item.As<IQoSAnnotations>();
                    if ((qosAnnotations_SpecifiedOutputParameterAbstractionCasted != null))
                    {
                        this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction = qosAnnotations_SpecifiedOutputParameterAbstractionCasted;
                        return;
                    }
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.Signature_SpecifiedOutputParameterAbstraction = null;
                this._parent.Role_SpecifiedOutputParameterAbstraction = null;
                this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Clear();
                this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction = null;
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.Signature_SpecifiedOutputParameterAbstraction))
                {
                    return true;
                }
                if ((item == this._parent.Role_SpecifiedOutputParameterAbstraction))
                {
                    return true;
                }
                if (this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Contains(item))
                {
                    return true;
                }
                if ((item == this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.Signature_SpecifiedOutputParameterAbstraction != null))
                {
                    array[arrayIndex] = this._parent.Signature_SpecifiedOutputParameterAbstraction;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.Role_SpecifiedOutputParameterAbstraction != null))
                {
                    array[arrayIndex] = this._parent.Role_SpecifiedOutputParameterAbstraction;
                    arrayIndex = (arrayIndex + 1);
                }
                IEnumerator<IModelElement> expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator = this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.GetEnumerator();
                try
                {
                    for (
                    ; expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    expectedExternalOutputs_SpecifiedOutputParameterAbstractionEnumerator.Dispose();
                }
                if ((this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction != null))
                {
                    array[arrayIndex] = this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction;
                    arrayIndex = (arrayIndex + 1);
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.Signature_SpecifiedOutputParameterAbstraction == item))
                {
                    this._parent.Signature_SpecifiedOutputParameterAbstraction = null;
                    return true;
                }
                if ((this._parent.Role_SpecifiedOutputParameterAbstraction == item))
                {
                    this._parent.Role_SpecifiedOutputParameterAbstraction = null;
                    return true;
                }
                IVariableUsage variableUsageItem = item.As<IVariableUsage>();
                if (((variableUsageItem != null) 
                            && this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction.Remove(variableUsageItem)))
                {
                    return true;
                }
                if ((this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction == item))
                {
                    this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction = null;
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.Signature_SpecifiedOutputParameterAbstraction).Concat(this._parent.Role_SpecifiedOutputParameterAbstraction).Concat(this._parent.ExpectedExternalOutputs_SpecifiedOutputParameterAbstraction).Concat(this._parent.QosAnnotations_SpecifiedOutputParameterAbstraction).GetEnumerator();
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the signature_SpecifiedOutputParameterAbstraction property
        /// </summary>
        private sealed class Signature_SpecifiedOutputParameterAbstractionProxy : ModelPropertyChange<ISpecifiedOutputParameterAbstraction, ISignature>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Signature_SpecifiedOutputParameterAbstractionProxy(ISpecifiedOutputParameterAbstraction modelElement) : 
                    base(modelElement, "signature_SpecifiedOutputParameterAbstraction")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override ISignature Value
            {
                get
                {
                    return this.ModelElement.Signature_SpecifiedOutputParameterAbstraction;
                }
                set
                {
                    this.ModelElement.Signature_SpecifiedOutputParameterAbstraction = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the role_SpecifiedOutputParameterAbstraction property
        /// </summary>
        private sealed class Role_SpecifiedOutputParameterAbstractionProxy : ModelPropertyChange<ISpecifiedOutputParameterAbstraction, IRole>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Role_SpecifiedOutputParameterAbstractionProxy(ISpecifiedOutputParameterAbstraction modelElement) : 
                    base(modelElement, "role_SpecifiedOutputParameterAbstraction")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IRole Value
            {
                get
                {
                    return this.ModelElement.Role_SpecifiedOutputParameterAbstraction;
                }
                set
                {
                    this.ModelElement.Role_SpecifiedOutputParameterAbstraction = value;
                }
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the qosAnnotations_SpecifiedOutputParameterAbstraction property
        /// </summary>
        private sealed class QosAnnotations_SpecifiedOutputParameterAbstractionProxy : ModelPropertyChange<ISpecifiedOutputParameterAbstraction, IQoSAnnotations>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public QosAnnotations_SpecifiedOutputParameterAbstractionProxy(ISpecifiedOutputParameterAbstraction modelElement) : 
                    base(modelElement, "qosAnnotations_SpecifiedOutputParameterAbstraction")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IQoSAnnotations Value
            {
                get
                {
                    return this.ModelElement.QosAnnotations_SpecifiedOutputParameterAbstraction;
                }
                set
                {
                    this.ModelElement.QosAnnotations_SpecifiedOutputParameterAbstraction = value;
                }
            }
        }
    }
}

