//------------------------------------------------------------------------------
// <auto-generated>
//     This Code was automatically created by the Atl2NmfS higher-order transformation.
//
//     Changes to this file can result in a wrong behavior and are discarded if the code is generated again.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using global::System.Collections.Generic;
using System.Globalization;
using System.Linq;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;

namespace NMFExamples.PcmToMM06
{
    public static class HelperExtensionMethods
    {
    	
    	public static IDictionary<string, ComponentBasedSystems.SystemIndependent.Type> DataTypeMap()
    	{
    		//attribute helper
    		return new Dictionary<string, ComponentBasedSystems.SystemIndependent.Type> {
    					{ "INT", ComponentBasedSystems.SystemIndependent.Type.EInt },
    					{ "STRING", ComponentBasedSystems.SystemIndependent.Type.EString },
    					{ "BOOL", ComponentBasedSystems.SystemIndependent.Type.EBoolean },
    					{ "DOUBLE", ComponentBasedSystems.SystemIndependent.Type.EDouble },
    					{ "CHAR", ComponentBasedSystems.SystemIndependent.Type.EChar },
    					{ "BYTE", ComponentBasedSystems.SystemIndependent.Type.EInt },
    					{ "LONG", ComponentBasedSystems.SystemIndependent.Type.ELong }
    				};
    	}
    	
    	
    	[ObservableProxy(typeof(Proxies), "ToDataType")]
    	public static ComponentBasedSystems.SystemIndependent.Type ToDataType(Pcm.Repository.IDataType cmType)
    	{
    		//functional helper
    		return (cmType == null) ? 
    			default(ComponentBasedSystems.SystemIndependent.Type) : ((cmType is Pcm.Repository.ICollectionDataType) ? 
    				(ComponentBasedSystems.SystemIndependent.Type.EList) : ((cmType is Pcm.Repository.ICompositeDataType) ? 
    					(ComponentBasedSystems.SystemIndependent.Type.EComplex) : ((cmType is Pcm.Repository.IPrimitiveDataType) ? 
    						(HelperExtensionMethods.DataTypeMap()[((Pcm.Repository.IPrimitiveDataType)cmType).Type.ToString()]) : default(ComponentBasedSystems.SystemIndependent.Type))));
    	}
    	
    	
    	private class Proxies
    	{
    		
    		private static readonly ObservingFunc<Pcm.Repository.IDataType, ComponentBasedSystems.SystemIndependent.Type> ToDataTypeFunc = 
    			new ObservingFunc<Pcm.Repository.IDataType, ComponentBasedSystems.SystemIndependent.Type>((cmType) => (cmType == null) ?
                default(ComponentBasedSystems.SystemIndependent.Type) : ((cmType is Pcm.Repository.ICollectionDataType) ?
                    (ComponentBasedSystems.SystemIndependent.Type.EList) : ((cmType is Pcm.Repository.ICompositeDataType) ?
                        (ComponentBasedSystems.SystemIndependent.Type.EComplex) : ((cmType is Pcm.Repository.IPrimitiveDataType) ?
                            (HelperExtensionMethods.DataTypeMap()[((Pcm.Repository.IPrimitiveDataType)cmType).Type.ToString()]) : default(ComponentBasedSystems.SystemIndependent.Type)))));
    			
    		public static INotifyValue<ComponentBasedSystems.SystemIndependent.Type> ToDataType(INotifyValue<Pcm.Repository.IDataType> cmType)
    		{
    		    return ToDataTypeFunc.Observe(cmType);
    		}
    		
    	}
    }
}
