//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMF.Models.Meta
{
    
    
    /// <summary>
    /// The public interface for ModelElement
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ModelElement))]
    [XmlDefaultImplementationTypeAttribute(typeof(ModelElement))]
    public interface IModelElement : IModelElement
    {
        
        /// <summary>
        /// The AbsoluteUri property
        /// </summary>
        Uri AbsoluteUri
        {
            get;
            set;
        }
        
        /// <summary>
        /// The RelativeUri property
        /// </summary>
        Uri RelativeUri
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Extensions property
        /// </summary>
        ICollectionExpression<IModelElementExtension> Extensions
        {
            get;
        }
        
        /// <summary>
        /// The Parent property
        /// </summary>
        NMF.Models.Meta.IModelElement Parent
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Type property
        /// </summary>
        IReferenceType Type
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the AbsoluteUri property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AbsoluteUriChanging;
        
        /// <summary>
        /// Gets fired when the AbsoluteUri property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> AbsoluteUriChanged;
        
        /// <summary>
        /// Gets fired before the RelativeUri property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RelativeUriChanging;
        
        /// <summary>
        /// Gets fired when the RelativeUri property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> RelativeUriChanged;
        
        /// <summary>
        /// Gets fired before the Parent property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ParentChanging;
        
        /// <summary>
        /// Gets fired when the Parent property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ParentChanged;
        
        /// <summary>
        /// Gets fired before the Type property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeChanging;
        
        /// <summary>
        /// Gets fired when the Type property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> TypeChanged;
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        IClass GetClass();
    }
}

