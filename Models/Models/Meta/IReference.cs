//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMF.Models.Meta
{
    
    
    /// <summary>
    /// The public interface for Reference
    /// </summary>
    [XmlNamespaceAttribute("http://nmf.codeplex.com/nmeta/")]
    [XmlNamespacePrefixAttribute("nmeta")]
    [ModelRepresentationClassAttribute("http://nmf.codeplex.com/nmeta/#//Reference/")]
    [XmlDefaultImplementationTypeAttribute(typeof(Reference))]
    [DefaultImplementationTypeAttribute(typeof(Reference))]
    public interface IReference : IModelElement, ITypedElement
    {
        
        /// <summary>
        /// The IsContainment property
        /// </summary>
        bool IsContainment
        {
            get;
            set;
        }
        
        /// <summary>
        /// The DeclaringType property
        /// </summary>
        IReferenceType DeclaringType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Opposite property
        /// </summary>
        IReference Opposite
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ReferenceType property
        /// </summary>
        IReferenceType ReferenceType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Refines property
        /// </summary>
        IReference Refines
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired when the IsContainment property changed its value
        /// </summary>
        event EventHandler IsContainmentChanged;
        
        /// <summary>
        /// Gets fired when the DeclaringType property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> DeclaringTypeChanged;
        
        /// <summary>
        /// Gets fired when the Opposite property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> OppositeChanged;
        
        /// <summary>
        /// Gets fired when the ReferenceType property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> ReferenceTypeChanged;
        
        /// <summary>
        /// Gets fired when the Refines property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> RefinesChanged;
    }
}

